// Mocks generated by Mockito 5.4.4 from annotations
// in aaelectroz_fe/test/auth_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:aaelectroz_fe/models/user_model.dart' as _i2;
import 'package:aaelectroz_fe/services/auth_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.UserModel> register({
    String? name,
    String? username,
    String? email,
    String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #name: name,
            #username: username,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #register,
            [],
            {
              #name: name,
              #username: username,
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<_i2.UserModel> login({
    String? email,
    String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<_i2.UserModel> editProfile({
    required String? name,
    required String? username,
    required String? email,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #editProfile,
          [],
          {
            #name: name,
            #username: username,
            #email: email,
            #token: token,
          },
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #editProfile,
            [],
            {
              #name: name,
              #username: username,
              #email: email,
              #token: token,
            },
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<bool> logout(String? token) => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [token],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
